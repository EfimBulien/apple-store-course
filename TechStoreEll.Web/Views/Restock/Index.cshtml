@model TechStoreEll.Core.Models.RestockViewModel

@{
    ViewData["Title"] = "Пополнение склада";
}

<style>
    .text-muted {
        opacity: 0.8;
    }
    
    .bi::before {
        display: inline-block;
    }
    
    .table {
        --bs-table-bg: transparent;
    }
    
    .card {
        background: var(--bs-card-bg);
    }
    
    .form-control::placeholder {
        color: var(--bs-secondary-color) !important;
        opacity: 0.8;
    }
</style>

<div class="container py-5">
    <div class="row justify-content-center">
        <div class="col-lg-12">
            <div class="d-flex justify-content-between align-items-center mb-4">
                <h2 class="mb-0 fw-bold">
                    <i class="bi bi-box-seam me-2"></i>Пополнение склада
                </h2>
            </div>

            @if (TempData["Success"] != null)
            {
                <div class="alert alert-success alert-dismissible fade show rounded-3">
                    <i class="bi bi-check-circle-fill me-2"></i>@TempData["Success"]
                    <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
                </div>
            }

            <div class="card shadow-sm border-0 rounded-4 mb-5">
                <div class="card-header bg-body-tertiary border-0 py-3">
                    <h4 class="mb-0 fw-bold">
                        <i class="bi bi-plus-circle me-2"></i>Добавить товары на склад
                    </h4>
                </div>
                <div class="card-body">
                    <form asp-action="Index" method="post">
                        @Html.AntiForgeryToken()

                        <div id="items-container"></div>

                        <div class="d-flex gap-3 mt-4">
                            <button type="button" class="btn btn-outline-primary rounded-3" onclick="addRow()">
                                <i class="bi bi-plus-circle me-2"></i>Добавить товар
                            </button>
                            <button type="submit" class="btn btn-success rounded-3 px-4">
                                <i class="bi bi-check-lg me-2"></i>Пополнить склад
                            </button>
                        </div>
                    </form>
                </div>
            </div>

            <div class="card shadow-sm border-0 rounded-4 mb-5">
                <div class="card-header bg-body-tertiary border-0 py-3">
                    <h4 class="mb-0 fw-bold">
                        <i class="bi bi-clipboard-data me-2"></i>Текущий инвентарь
                    </h4>
                </div>
                <div class="card-body p-0">
                    <div class="table-responsive">
                        <table class="table table-hover align-middle mb-0">
                            <thead class="bg-body-tertiary">
                                <tr>
                                    <th class="ps-4">
                                        <i class="bi bi-box text-muted me-2"></i>Товар
                                    </th>
                                    <th>
                                        <i class="bi bi-code-slash text-muted me-2"></i>Вариант
                                    </th>
                                    <th>
                                        <i class="bi bi-building text-muted me-2"></i>Склад
                                    </th>
                                    <th class="text-center">
                                        <i class="bi bi-check-circle text-muted me-2"></i>Доступно
                                    </th>
                                    <th class="text-center">
                                        <i class="bi bi-clock text-muted me-2"></i>Резерв
                                    </th>
                                    <th class="text-center">
                                        <i class="bi bi-calculator text-muted me-2"></i>Свободно
                                    </th>
                                </tr>
                            </thead>
                            <tbody>
                                @foreach (var inv in Model.Inventory)
                                {
                                    var available = inv.Quantity - inv.Reserve;
                                    <tr>
                                        <td class="ps-4 fw-semibold">@inv.ProductName</td>
                                        <td>
                                            <span class="badge bg-secondary text-white">@inv.VariantCode</span>
                                        </td>
                                        <td>@inv.WarehouseName</td>
                                        <td class="text-center">
                                            <span class="fw-bold text-primary">@inv.Quantity</span>
                                        </td>
                                        <td class="text-center">
                                            <span class="fw-bold text-warning">@inv.Reserve</span>
                                        </td>
                                        <td class="text-center">
                                            <span class="fw-bold @(available > 0 ? "text-success" : "text-danger")">
                                                @available
                                            </span>
                                        </td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                    </div>
                </div>
            </div>

            <div class="card shadow-sm border-0 rounded-4">
                <div class="card-header bg-body-tertiary border-0 py-3">
                    <h4 class="mb-0 fw-bold">
                        <i class="bi bi-clock-history me-2"></i>Последние движения
                    </h4>
                </div>
                <div class="card-body p-0">
                    <div class="table-responsive">
                        <table class="table table-hover align-middle mb-0">
                            <thead class="bg-body-tertiary">
                                <tr>
                                    <th class="ps-4">
                                        <i class="bi bi-box text-muted me-2"></i>Товар
                                    </th>
                                    <th>
                                        <i class="bi bi-code-slash text-muted me-2"></i>Вариант
                                    </th>
                                    <th>
                                        <i class="bi bi-building text-muted me-2"></i>Склад
                                    </th>
                                    <th class="text-center">
                                        <i class="bi bi-arrow-left-right text-muted me-2"></i>Изменение
                                    </th>
                                    <th class="text-center">
                                        <i class="bi bi-chat-dots text-muted me-2"></i>Причина
                                    </th>
                                    <th class="text-center">
                                        <i class="bi bi-person text-muted me-2"></i>Кем
                                    </th>
                                    <th class="text-center">
                                        <i class="bi bi-calendar text-muted me-2"></i>Когда
                                    </th>
                                </tr>
                            </thead>
                            <tbody>
                                @foreach (var m in Model.Movements)
                                {
                                    <tr>
                                        <td class="ps-4 fw-semibold">@m.ProductName</td>
                                        <td>
                                            <span class="badge bg-secondary text-white">@m.VariantCode</span>
                                        </td>
                                        <td>@m.WarehouseName</td>
                                        <td class="text-center">
                                            <span class="fw-bold @(m.ChangeQty > 0 ? "text-success" : "text-danger")">
                                                @(m.ChangeQty > 0 ? "+" : "")@m.ChangeQty
                                            </span>
                                        </td>
                                        <td class="text-center">
                                            @{
                                                var reasonText = m.Reason switch
                                                {
                                                    "restock" => "Пополнение склада",
                                                    "sale" => "Продажа",
                                                    "return" => "Возврат",
                                                    "adjustment" => "Корректировка",
                                                    _ => m.Reason
                                                };
                                            }
                                            <span class="badge @(m.ChangeQty > 0 ? "bg-success" : "bg-danger") text-white">@reasonText</span>
                                        </td>
                                        <td class="text-center">
                                            <span class="fw-bold text-primary">@m.CreatedBy</span>
                                        </td>
                                        <td class="text-center">
                                            <span class="fw-bold text-info">@m.CreatedAt.ToString("g")</span>
                                        </td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
<script>
    function addRow() {
        try {
            const container = document.getElementById('items-container');
            if (!container) {
                console.error('Контейнер items-container не найден');
                return;
            }

            const index = container.children.length;
            
            const warehouses = @Html.Raw(Json.Serialize(ViewBag.Warehouses ?? new List<string>()));
            const variants = @Html.Raw(Json.Serialize(ViewBag.Variants ?? new List<object>()));
            
            console.log('Warehouses:', warehouses);
            console.log('Variants:', variants);

            let warehouseOptions = '<option value="">Выберите склад...</option>';
            let variantOptions = '<option value="">Выберите товар...</option>';
            
            if (Array.isArray(warehouses) && warehouses.length > 0) {
                warehouseOptions += warehouses.map(w => 
                    w ? `<option value="${w}">${w}</option>` : '<option value="">Неверный склад</option>'
                ).join('');
            } else {
                warehouseOptions = '<option value="">Нет доступных складов</option>';
            }
            
            if (Array.isArray(variants) && variants.length > 0) {
                variantOptions += variants.map(v => {
                    const id = v && v.id ? v.id : '';
                    const name = v && v.name ? v.name : 'Без названия';
                    return `<option value="${id}">${name}</option>`;
                }).join('');
            } else {
                variantOptions = '<option value="">Нет доступных товаров</option>';
            }

            const row = `
                <div class="row g-3 p-4 border-bottom bg-body-tertiary rounded-3 mb-3 inventory-row">
                    <div class="col-md-5">
                        <label class="form-label fw-semibold">
                            <i class="bi bi-box text-muted me-1"></i>Товар
                        </label>
                        <select name="Items[${index}].ProductVariantId" class="form-select rounded-3" required>
                            ${variantOptions}
                        </select>
                    </div>
                    <div class="col-md-3">
                        <label class="form-label fw-semibold">
                            <i class="bi bi-building text-muted me-1"></i>Склад
                        </label>
                        <select name="Items[${index}].WarehouseName" class="form-select rounded-3" required>
                            ${warehouseOptions}
                        </select>
                    </div>
                    <div class="col-md-3">
                        <label class="form-label fw-semibold">
                            <i class="bi bi-123 text-muted me-1"></i>Количество
                        </label>
                        <input type="number" name="Items[${index}].Quantity" 
                               class="form-control rounded-3" 
                               min="1" max="10000" required 
                               placeholder="Введите количество"
                               value="1" />
                    </div>
                    <div class="col-md-1 d-flex align-items-end">
                        <button type="button" class="btn btn-outline-danger rounded-3 w-100" 
                                onclick="this.closest('.inventory-row').remove()" 
                                title="Удалить строку">
                            <i class="bi bi-trash"></i>
                        </button>
                    </div>
                </div>
            `;
            
            container.insertAdjacentHTML('beforeend', row);
            
        } catch (error) {
            console.error('Ошибка при добавлении строки:', error);
            alert('Произошла ошибка при добавлении товара. Проверьте консоль для подробностей.');
        }
    }

    function reindexRows() {
        const container = document.getElementById('items-container');
        const rows = container.querySelectorAll('.inventory-row');
        
        rows.forEach((row, index) => {
            const variantSelect = row.querySelector('select[name*="ProductVariantId"]');
            const warehouseSelect = row.querySelector('select[name*="WarehouseName"]');
            const quantityInput = row.querySelector('input[name*="Quantity"]');
            
            if (variantSelect) variantSelect.name = `Items[${index}].ProductVariantId`;
            if (warehouseSelect) warehouseSelect.name = `Items[${index}].WarehouseName`;
            if (quantityInput) quantityInput.name = `Items[${index}].Quantity`;
        });
    }

    document.addEventListener('DOMContentLoaded', function() {
        const container = document.getElementById('items-container');
        if (container && container.children.length === 0) {
            addRow();
        }
        
        container.addEventListener('DOMNodeRemoved', function(e) {
            if (e.target.classList.contains('inventory-row')) {
                setTimeout(reindexRows, 0);
            }
        });
    });
</script>
}