@model List<TechStoreEll.Api.Entities.Address>
@{
    ViewData["Title"] = "–ú–æ–∏ –∞–¥—Ä–µ—Å–∞";
}

<h2>–ú–æ–∏ –∞–¥—Ä–µ—Å–∞</h2>

<a asp-action="Edit" class="btn btn-primary mb-3">‚ûï –î–æ–±–∞–≤–∏—Ç—å –∞–¥—Ä–µ—Å</a>

@if (TempData["Success"] != null)
{
    <div class="alert alert-success">@TempData["Success"]</div>
}
@if (TempData["Error"] != null)
{
    <div class="alert alert-danger">@TempData["Error"]</div>
}

@if (Model.Any())
{
    <div class="row">
        @foreach (var addr in Model)
        {
            <div class="col-md-6 col-lg-4 mb-3">
                <div class="card">
                    <div class="card-body">
                        <h5 class="card-title">
                            @(addr.Label ?? "–ë–µ–∑ –Ω–∞–∑–≤–∞–Ω–∏—è")
                            @if (ViewBag.ShippingAddressId?.Equals(addr.Id) == true)
                            {
                                <span class="badge bg-success">–î–æ—Å—Ç–∞–≤–∫–∞</span>
                            }
                            @if (ViewBag.BillingAddressId?.Equals(addr.Id) == true)
                            {
                                <span class="badge bg-info">–û–ø–ª–∞—Ç–∞</span>
                            }
                        </h5>
                        <p class="card-text">
                            @addr.Country<br />
                            @if (!string.IsNullOrEmpty(addr.Region)) { @addr.Region<br /> }
                            @addr.City, @addr.Street, @addr.House
                            @if (!string.IsNullOrEmpty(addr.Apartment)) { <text>, –∫–≤. @addr.Apartment</text> }
                            @if (!string.IsNullOrEmpty(addr.Postcode)) { <text>, @addr.Postcode</text> }
                        </p>
                        <div>
                            <a asp-action="Edit" asp-route-id="@addr.Id" class="btn btn-sm btn-outline-primary">‚úèÔ∏è –ò–∑–º–µ–Ω–∏—Ç—å</a>
                            
                            <form asp-action="SetShipping" asp-route-id="@addr.Id" method="post" style="display:inline;" class="d-inline">
                                @Html.AntiForgeryToken()
                                <button type="submit" class="btn btn-sm btn-outline-success">üöö –î–æ—Å—Ç–∞–≤–∫–∞</button>
                            </form>
                            
                            <form asp-action="SetBilling" asp-route-id="@addr.Id" method="post" style="display:inline;" class="d-inline">
                                @Html.AntiForgeryToken()
                                <button type="submit" class="btn btn-sm btn-outline-info">üí≥ –û–ø–ª–∞—Ç–∞</button>
                            </form>
                            
                            @if (ViewBag.ShippingAddressId?.Equals(addr.Id) == false && ViewBag.BillingAddressId?.Equals(addr.Id) == false)
                            {
                                <form asp-action="Delete" asp-route-id="@addr.Id" method="post" style="display:inline;" 
                                      onsubmit="return confirm('–£–¥–∞–ª–∏—Ç—å –∞–¥—Ä–µ—Å?');" class="d-inline">
                                    @Html.AntiForgeryToken()
                                    <button type="submit" class="btn btn-sm btn-outline-danger">üóëÔ∏è –£–¥–∞–ª–∏—Ç—å</button>
                                </form>
                            }
                        </div>
                    </div>
                </div>
            </div>
        }
    </div>
}
else
{
    <p>–£ –≤–∞—Å –ø–æ–∫–∞ –Ω–µ—Ç —Å–æ—Ö—Ä–∞–Ω—ë–Ω–Ω—ã—Ö –∞–¥—Ä–µ—Å–æ–≤.</p>
}