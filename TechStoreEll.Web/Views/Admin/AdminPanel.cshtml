@model TechStoreEll.Web.Models.AdminPanelViewModel

@{
    ViewData["Title"] = "–ê–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å";
}

<p>–¢–æ–ª—å–∫–æ –¥–ª—è –∞–¥–º–∏–Ω–æ–≤ üé©</p>
<div class="mb-4">
    <div class="d-flex flex-wrap gap-2">
        <a asp-controller="Warehous" asp-action="Index" class="btn btn-primary">
            –°–∫–ª–∞–¥—ã
        </a>
        <a asp-controller="Role" asp-action="Index" class="btn btn-primary">
            –†–æ–ª–∏
        </a>
        <a asp-controller="Category" asp-action="Index" class="btn btn-primary">
            –ö–∞—Ç–µ–≥–æ—Ä–∏–∏
        </a>
        <a asp-controller="Admin" asp-action="Export" class="btn btn-info">
            –≠–∫—Å–ø–æ—Ä—Ç –¥–∞–Ω–Ω—ã—Ö
        </a>
        <a asp-action="ReviewModeration" class="btn btn-outline-warning">
            üìù –ú–æ–¥–µ—Ä–∞—Ü–∏—è –æ—Ç–∑—ã–≤–æ–≤
            @if (ViewBag.UnmoderatedCount > 0)
            {
                <span class="badge bg-danger">@ViewBag.UnmoderatedCount</span>
            }
        </a>
    </div>
    
</div>

<h2>–ñ—É—Ä–Ω–∞–ª –∞—É–¥–∏—Ç–∞</h2>
<div class="mb-3">
    <form method="get" class="row g-2">
        <div class="col-auto">
            <p>–í—ã–±–µ—Ä–∏—Ç–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ—Å–ª–µ–¥–Ω–∏—Ö –∑–∞–ø–∏—Å–µ–π</p>
            <label for="take" class="visually-hidden">–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∑–∞–ø–∏—Å–µ–π</label>
            <input type="number"
                   id="take"
                   name="take"
                   value="@Model.Take"
                   min="10"
                   max="1000"
                   class="form-control"
                   style="width: 120px;"/>
            <div class="col-auto mt-3">
                <button type="submit" class="btn btn-primary">–ü—Ä–∏–º–µ–Ω–∏—Ç—å</button>
            </div>
        </div>
    </form>
</div>

<div class="table-responsive">
    <table class="table table-striped table-bordered">
        <thead class="table-dark">
            <tr>
                <th>–î–∞—Ç–∞ –∏ –≤—Ä–µ–º—è</th>
                <th>–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å</th>
                <th>–¢–∞–±–ª–∏—Ü–∞</th>
                <th>–û–ø–µ—Ä–∞—Ü–∏—è</th>
                <th>ID –∑–∞–ø–∏—Å–∏</th>
                <th>–ò–∑–º–µ–Ω–µ–Ω–∏—è</th>
            </tr>
        </thead>
        <tbody>
            @if (Model.AuditLogs.Any())
            {
                @foreach (var log in Model.AuditLogs)
                {
                    <tr>
                        <td>@log.ChangedAt.ToString("dd.MM.yyyy HH:mm:ss")</td>
                        <td>
                            @(log.ChangedByNavigation != null 
                                ? $"{log.ChangedByNavigation.FirstName} " +
                                  $"{log.ChangedByNavigation.LastName} " +
                                  $"({log.ChangedByNavigation.Email})" : "–°–∏—Å—Ç–µ–º–∞")
                        </td>
                        <td><code>@log.TableName</code></td>
                        <td>
                            @{
                                var opText = log.Operation switch
                                {
                                    'I' => "–°–æ–∑–¥–∞–Ω–∏–µ",
                                    'U' => "–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ",
                                    'D' => "–£–¥–∞–ª–µ–Ω–∏–µ",
                                    _ => "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ"
                                };
                                var opClass = log.Operation switch
                                {
                                    'I' => "text-success",
                                    'U' => "text-warning",
                                    'D' => "text-danger",
                                    _ => ""
                                };
                            }
                            <span class="@opClass">@opText</span>
                        </td>
                        <td>@(log.RecordId ?? "‚Äî")</td>
                        <td>
                            @if (log.OldRow != null || log.NewRow != null)
                            {
                                <details>
                                    <summary>–ü–æ–∫–∞–∑–∞—Ç—å JSON</summary>
                                    @if (log.OldRow != null)
                                    {
                                        <div>
                                            <strong>–ë—ã–ª–æ:</strong>
                                            <pre style="font-size:0.85em;">@log.OldRow</pre>
                                        </div>
                                    }
                                    @if (log.NewRow != null)
                                    {
                                        <div>
                                            <strong>–°—Ç–∞–ª–æ:</strong> <pre style="font-size:0.85em;">@log.NewRow</pre>
                                        </div>
                                    }
                                </details>
                            }
                            else
                            {
                                <em>–ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö</em>
                            }
                        </td>
                    </tr>
                }
            }
            else
            {
                <tr>
                    <td colspan="6" class="text-center">–ù–µ—Ç –∑–∞–ø–∏—Å–µ–π –≤ –∂—É—Ä–Ω–∞–ª–µ</td>
                </tr>
            }
        </tbody>
    </table>
</div>

@section Scripts {
    <style>
        pre {
            white-space: pre-wrap;
            word-break: break-word;
            padding: 8px;
            border-radius: 4px;
            margin: 4px 0;
            font-size: 0.85em;
        }
    </style>
}