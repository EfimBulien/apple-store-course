@model TechStoreEll.Api.Models.AnalyticsViewModel

<h2>Аналитика</h2>

<form method="get" class="mb-4">
    <div class="row">
        <div class="col-md-4">
            <label>Начало периода</label>
            <input type="date" name="startDate" value="@Model.StartDate.ToString("yyyy-MM-dd")" 
                   class="form-control" />
        </div>
        <div class="col-md-4">
            <label>Конец периода</label>
            <input type="date" name="endDate" value="@Model.EndDate.ToString("yyyy-MM-dd")" 
                   class="form-control" />
        </div>
        <div class="col-md-4 d-flex align-items-end">
            <button type="submit" class="btn btn-primary">Применить</button>
            <a href="@Url.Action("ExportAnalyticsCsv", new { startDate = Model.StartDate, endDate = Model.EndDate })" 
               class="btn btn-outline-secondary ms-2">Экспорт в CSV</a>
        </div>
    </div>
</form>

<!-- График 1: Продажи по дням -->
<canvas id="salesChart" height="100"></canvas>

<!-- График 2: Топ категорий -->
<canvas id="categoriesChart" height="100"></canvas>
<h4>TopCategories (отладка):</h4>
<ul>
    @foreach (var c in Model.TopCategories)
    {
        <li>@c.CategoryName: @c.Revenue.ToString("F2")</li>
    }
</ul>

<h4>Всего категорий: @Model.TopCategories.Count</h4>
<!-- График 3: Активность пользователей -->
<canvas id="usersChart" height="100"></canvas>
@section Scripts {
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <script>
        const salesCtx = document.getElementById('salesChart').getContext('2d');
        new Chart(salesCtx, {
            type: 'line',
            data: {
                labels: @Html.Raw(Json.Serialize(Model.SalesByDay.Select(s => s.Date.ToString("yyyy-MM-dd")).ToArray())),
                datasets: [{
                    label: 'Выручка, ₽',
                    data: @Html.Raw(Json.Serialize(Model.SalesByDay.Select(s => (double)s.Total).ToArray())),
                    borderColor: 'rgb(75, 192, 192)',
                    tension: 0.1
                }]
            }
        });

        const catCtx = document.getElementById('categoriesChart').getContext('2d');
        new Chart(catCtx, {
            type: 'bar',
            data: {
                labels: @Html.Raw(Json.Serialize(Model.TopCategories.Select(c => c.CategoryName).ToArray())),
                datasets: [{
                    label: 'Выручка, ₽',
                    data: @Html.Raw(Json.Serialize(Model.TopCategories.Select(c => (double)c.Revenue).ToArray())),
                    backgroundColor: 'rgba(54, 162, 235, 0.6)'
                }]
            },
            options: { indexAxis: 'y' }
        });

        const userCtx = document.getElementById('usersChart').getContext('2d');
        new Chart(userCtx, {
            type: 'bar',
            data: {
                labels: @Html.Raw(Json.Serialize(Model.UserActivities.Select(u => u.FullName).ToArray())),
                datasets: [{
                    label: 'Количество заказов',
                    data: @Html.Raw(Json.Serialize(Model.UserActivities.Select(u => u.OrderCount).ToArray())),
                    backgroundColor: 'rgba(255, 99, 132, 0.6)'
                }]
            }
        });
    </script>
}