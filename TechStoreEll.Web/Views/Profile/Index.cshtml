@model TechStoreEll.Core.Models.ProfileViewModel

@{
    ViewData["Title"] = "Личный кабинет";
}

<div class="container py-5">
    <div class="row justify-content-center">
        <div class="col-lg-10">
            <div class="d-flex justify-content-between align-items-center mb-4">
                <h2 class="mb-0 fw-bold">
                    <i class="bi bi-person-circle me-2"></i>Личный кабинет
                </h2>
                <form asp-controller="Auth" asp-action="Logout" method="post" class="d-inline">
                    <button type="submit" class="btn btn-outline-danger btn-sm">
                        <i class="bi bi-box-arrow-right me-1"></i>Выйти
                    </button>
                </form>
            </div>

            @if (TempData["SuccessMessage"] != null)
            {
                <div class="alert alert-success alert-dismissible fade show rounded-3">
                    <i class="bi bi-check-circle-fill me-2"></i>@TempData["SuccessMessage"]
                    <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
                </div>
            }

            @if (TempData["ErrorMessage"] != null)
            {
                <div class="alert alert-danger alert-dismissible fade show rounded-3">
                    <i class="bi bi-exclamation-triangle-fill me-2"></i>@TempData["ErrorMessage"]
                    <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
                </div>
            }

            <div class="row g-4">
                <div class="col-lg-6">
                    <div class="card shadow-sm border-0 rounded-4 h-100">
                        <div class="card-header bg-body-tertiary border-0 py-3">
                            <h4 class="mb-0 fw-bold">
                                <i class="bi bi-person-vcard me-2"></i>Личные данные
                            </h4>
                        </div>
                        <div class="card-body">
                            <form asp-action="UpdateProfile" method="post" id="profileForm">
                                @Html.AntiForgeryToken()
                                
                                <div asp-validation-summary="ModelOnly" class="alert alert-danger rounded-3"></div>
                                
                                <div class="row g-3">
                                    <div class="col-12">
                                        <label asp-for="User.Email" class="form-label fw-semibold">
                                            <i class="bi bi-envelope text-muted me-1"></i>Email
                                        </label>
                                        <input asp-for="User.Email" class="form-control rounded-3"
                                               value="@Model.User.Email" />
                                        <span asp-validation-for="User.Email" class="text-danger small"></span>
                                    </div>

                                    <div class="col-12">
                                        <label asp-for="User.Phone" class="form-label fw-semibold">
                                            <i class="bi bi-telephone text-muted me-1"></i>Телефон
                                        </label>
                                        <input asp-for="User.Phone" class="form-control rounded-3" 
                                               value="@Model.User.Phone" />
                                        <span asp-validation-for="User.Phone" class="text-danger small"></span>
                                    </div>

                                    <div class="col-md-6">
                                        <label asp-for="User.LastName" class="form-label fw-semibold">Фамилия</label>
                                        <input asp-for="User.LastName" class="form-control rounded-3" 
                                               value="@Model.User.LastName" />
                                        <span asp-validation-for="User.LastName" class="text-danger small"></span>
                                    </div>

                                    <div class="col-md-6">
                                        <label asp-for="User.FirstName" class="form-label fw-semibold">Имя</label>
                                        <input asp-for="User.FirstName" class="form-control rounded-3" 
                                               value="@Model.User.FirstName" />
                                        <span asp-validation-for="User.FirstName" class="text-danger small"></span>
                                    </div>

                                    <div class="col-12">
                                        <label asp-for="User.MiddleName" class="form-label fw-semibold">
                                            Отчество
                                        </label>
                                        <input asp-for="User.MiddleName" class="form-control rounded-3" 
                                               value="@Model.User.MiddleName" />
                                        <span asp-validation-for="User.MiddleName" class="text-danger small"></span>
                                    </div>

                                    <div class="col-12 mt-4">
                                        <button type="submit" class="btn btn-primary w-100 py-2 rounded-3">
                                            <i class="bi bi-check-circle me-2"></i>Обновить данные
                                        </button>
                                    </div>
                                </div>
                            </form>
                        </div>
                    </div>
                </div>

                <div class="col-lg-6">
                    <div class="card shadow-sm border-0 rounded-4 h-100">
                        <div class="card-header bg-body-tertiary border-0 py-3">
                            <h4 class="mb-0 fw-bold">
                                <i class="bi bi-gear me-2"></i>Настройки
                            </h4>
                        </div>
                        <div class="card-body">
                            <form asp-action="UpdateSettings" method="post" id="settingsForm">
                                @Html.AntiForgeryToken()
                                
                                <div class="row g-3">
                                    <div class="col-12">
                                        <label for="Theme" class="form-label fw-semibold">
                                            <i class="bi bi-palette text-muted me-1"></i>Тема оформления
                                        </label>
                                        <select name="Theme" id="Theme" class="form-select rounded-3">
                                            <option value="light" selected="@(Model.Settings.Theme == "light")">
                                                Светлая
                                            </option>
                                            <option value="dark" selected="@(Model.Settings.Theme == "dark")">
                                                Темная
                                            </option>
                                        </select>
                                        <span class="text-danger small"
                                              data-valmsg-for="Theme" data-valmsg-replace="true"></span>
                                    </div>

                                    <div class="col-12">
                                        <label for="ItemsPerPage" class="form-label fw-semibold">
                                            <i class="bi bi-list-ol text-muted me-1"></i>Элементов на странице
                                        </label>
                                        <input type="number" name="ItemsPerPage" id="ItemsPerPage" 
                                               class="form-control rounded-3" min="5" max="200" 
                                               value="@Model.Settings.ItemsPerPage" />
                                        <span class="text-danger small" 
                                              data-valmsg-for="ItemsPerPage" data-valmsg-replace="true"></span>
                                    </div>

                                    <div class="col-12">
                                        <label for="DateFormat" class="form-label fw-semibold">
                                            <i class="bi bi-calendar text-muted me-1"></i>Формат даты
                                        </label>
                                        <select name="DateFormat" id="DateFormat" class="form-select rounded-3">
                                            <option value="YYYY-MM-DD" 
                                                    selected="@(Model.Settings.DateFormat == "YYYY-MM-DD")">
                                                YYYY-MM-DD
                                            </option>
                                            <option value="DD.MM.YYYY" 
                                                    selected="@(Model.Settings.DateFormat == "DD.MM.YYYY")">
                                                DD.MM.YYYY
                                            </option>
                                            <option value="MM/DD/YYYY" 
                                                    selected="@(Model.Settings.DateFormat == "MM/DD/YYYY")">
                                                MM/DD/YYYY
                                            </option>
                                        </select>
                                        <span class="text-danger small" 
                                              data-valmsg-for="DateFormat" data-valmsg-replace="true"></span>
                                    </div>

                                    <div class="col-12">
                                        <label for="NumberFormat" class="form-label fw-semibold">
                                            <i class="bi bi-123 text-muted me-1"></i>Формат чисел
                                        </label>
                                        <select name="NumberFormat" id="NumberFormat" class="form-select rounded-3">
                                            <option value="en_US" selected="@(Model.Settings.NumberFormat == "en_US")">
                                                Английский (1,000.00)
                                            </option>
                                            <option value="ru_RU" selected="@(Model.Settings.NumberFormat == "ru_RU")">
                                                Русский (1 000,00)
                                            </option>
                                        </select>
                                        <span class="text-danger small" data-valmsg-for="NumberFormat" 
                                              data-valmsg-replace="true"></span>
                                    </div>
                                    
                                    <div class="col-12 mt-4">
                                        <button type="submit" class="btn btn-primary w-100 py-2 rounded-3">
                                            <i class="bi bi-save me-2"></i>Сохранить настройки
                                        </button>
                                    </div>
                                </div>
                            </form>
                        </div>
                    </div>
                </div>
            </div>
            
            <div class="row g-4 mt-2">
                <div class="col-12">
                    <div class="card shadow-sm border-0 rounded-4">
                        <div class="card-header bg-body-tertiary border-0 py-3">
                            <h5 class="mb-0 fw-bold">
                                <i class="bi bi-lightning me-2"></i>Быстрые действия
                            </h5>
                        </div>
                        <div class="card-body">
                            <div class="row g-3">
                                <div class="col-md-4">
                                    <a asp-controller="Order" asp-action="Index" 
                                       class="btn btn-outline-primary w-100 rounded-3 py-3">
                                        <i class="bi bi-receipt display-6 mb-2"></i>
                                        <div class="fw-semibold">Мои заказы</div>
                                    </a>
                                </div>
                                <div class="col-md-4">
                                    <a asp-controller="Address" asp-action="Index" 
                                       class="btn btn-outline-success w-100 rounded-3 py-3">
                                        <i class="bi bi-house-door display-6 mb-2"></i>
                                        <div class="fw-semibold">Адреса</div>
                                    </a>
                                </div>
                                <div class="col-md-4">
                                    <a asp-controller="Home" asp-action="Index" 
                                       class="btn btn-outline-info w-100 rounded-3 py-3">
                                        <i class="bi bi-bag display-6 mb-2"></i>
                                        <div class="fw-semibold">Каталог</div>
                                    </a>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
@section Scripts {
    <partial name="_ValidationScriptsPartial" />
    
    <script>
        function initializeSelects() {
            const themeSelect = document.getElementById('Theme');
            if (themeSelect) {
                themeSelect.value = '@Model.Settings.Theme';
            }

            const dateFormatSelect = document.getElementById('DateFormat');
            if (dateFormatSelect) {
                dateFormatSelect.value = '@Model.Settings.DateFormat';
            }

            const numberFormatSelect = document.getElementById('NumberFormat');
            if (numberFormatSelect) {
                numberFormatSelect.value = '@Model.Settings.NumberFormat';
            }
        }
        
        function setupFormLogging() {
            const settingsForm = document.getElementById('settingsForm');
            if (settingsForm) {
                settingsForm.addEventListener('submit', function(e) {
                    console.log('Данные формы настроек:');
                    console.log('Theme:', document.getElementById('Theme').value);
                    console.log('ItemsPerPage:', document.getElementById('ItemsPerPage').value);
                    console.log('DateFormat:', document.getElementById('DateFormat').value);
                    console.log('NumberFormat:', document.getElementById('NumberFormat').value);
                    
                    const newSettings = {
                        theme: document.getElementById('Theme').value,
                        itemsPerPage: parseInt(document.getElementById('ItemsPerPage').value),
                        dateFormat: document.getElementById('DateFormat').value,
                        numberFormat: document.getElementById('NumberFormat').value
                    };
                    
                    localStorage.setItem('userSettings', JSON.stringify(newSettings));
                    console.log('Настройки сохранены в localStorage:', newSettings);
                    
                    window.dispatchEvent(new StorageEvent('storage', {
                        key: 'userSettings',
                        newValue: JSON.stringify(newSettings)
                    }));
                });
            }
        }

        function updateAllPagesWithNewSettings(settings) {
            localStorage.setItem('userSettings', JSON.stringify(settings));
            
            if (typeof BroadcastChannel !== 'undefined') {
                const channel = new BroadcastChannel('user_settings');
                channel.postMessage(settings);
            }
            
            window.dispatchEvent(new StorageEvent('storage', {
                key: 'userSettings',
                newValue: JSON.stringify(settings)
            }));
        }

        document.addEventListener('DOMContentLoaded', function() {
            initializeSelects();
            setupFormLogging();
            
            const inputs = document.querySelectorAll('#settingsForm input, #settingsForm select');
            inputs.forEach(input => {
                input.addEventListener('change', function() {
                    console.log('Изменено поле:', this.name, 'Значение:', this.value);
                });
            });

            if (typeof BroadcastChannel !== 'undefined') {
                const channel = new BroadcastChannel('user_settings');
                channel.onmessage = function(event) {
                    console.log('Получены новые настройки через BroadcastChannel:', event.data);
                    localStorage.setItem('userSettings', JSON.stringify(event.data));
                };
            }
        });

        $(document).ready(function () {
            $('#settingsForm').validate({
                rules: {
                    Theme: {
                        required: true
                    },
                    ItemsPerPage: {
                        required: true,
                        range: [5, 200]
                    },
                    DateFormat: {
                        required: true
                    },
                    NumberFormat: {
                        required: true
                    }
                },
                messages: {
                    Theme: {
                        required: "Выберите тему оформления"
                    },
                    ItemsPerPage: {
                        required: "Введите количество элементов",
                        range: "Количество элементов должно быть от 5 до 200"
                    },
                    DateFormat: {
                        required: "Выберите формат даты"
                    },
                    NumberFormat: {
                        required: "Выберите формат чисел"
                    }
                },
                errorElement: 'span',
                errorClass: 'text-danger',
                errorPlacement: function (error, element) {
                    error.addClass('small');
                    error.insertAfter(element);
                },
                highlight: function (element) {
                    $(element).addClass('is-invalid').removeClass('is-valid');
                },
                unhighlight: function (element) {
                    $(element).removeClass('is-invalid').addClass('is-valid');
                }
            });
        });
    </script>
}